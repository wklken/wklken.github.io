<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>paas on WKLKEN THINKING</title>
    <link>https://wklken.me/tags/paas.html</link>
    <description>Recent content in paas on WKLKEN THINKING</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 23 Sep 2017 15:00:00 +0800</lastBuildDate><atom:link href="https://wklken.me/tags/paas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k8s APIServer源码: api注册详细细节</title>
      <link>https://wklken.me/posts/2017/09/23/source-apiserver-04.html</link>
      <pubDate>Sat, 23 Sep 2017 15:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2017/09/23/source-apiserver-04.html</guid>
      <description>基于版本 1.6.7 前面介绍了, api注册过程 问题: go-restful github的route中, handler和path是如何绑定在一起的? handler在哪里定义</description>
    </item>
    
    <item>
      <title>k8s APIServer源码: api注册主体流程</title>
      <link>https://wklken.me/posts/2017/09/23/source-apiserver-03.html</link>
      <pubDate>Sat, 23 Sep 2017 14:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2017/09/23/source-apiserver-03.html</guid>
      <description>基于版本 1.6.7 k8s使用了go-restful github, 在前面, 已经介绍了container如何初始化的. 这里, 需要关注, api是如何注册进来的. 即, route</description>
    </item>
    
    <item>
      <title>k8s APIServer源码: 服务启动</title>
      <link>https://wklken.me/posts/2017/09/23/source-apiserver-02.html</link>
      <pubDate>Sat, 23 Sep 2017 13:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2017/09/23/source-apiserver-02.html</guid>
      <description>基于版本 1.6.7 启动流程 cmd/kube-apiserver/apiserver.go func main() { app.Run(s) } cmd/kube-apiserver/app/server.go func Run(s *options.ServerRunOptions) error { // 构建master配置信息 config, sharedInformers, err := BuildMasterConfig(s) // 调用RunServer return RunServer(config, sharedInformers, wait.NeverStop) } func RunServer(config *master.Config, sharedInformers informers.SharedInformerFactory, stopCh &amp;lt;-chan struct{}) error { // 执行相</description>
    </item>
    
    <item>
      <title>k8s APIServer源码: go-restful框架</title>
      <link>https://wklken.me/posts/2017/09/23/source-apiserver-01.html</link>
      <pubDate>Sat, 23 Sep 2017 12:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2017/09/23/source-apiserver-01.html</guid>
      <description>基于版本 1.6.7 k8s的APIServer, 使用了go-restful作为其处理框架, 注册资源并接收处理 HTTP 请求. 在阅读APIServer源码之前,</description>
    </item>
    
  </channel>
</rss>
