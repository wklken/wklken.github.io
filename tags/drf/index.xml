<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>drf on WKLKEN THINKING</title>
    <link>https://wklken.me/tags/drf.html</link>
    <description>Recent content in drf on WKLKEN THINKING</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 19 Oct 2022 01:00:00 +0800</lastBuildDate><atom:link href="https://wklken.me/tags/drf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django DRF 性能优化</title>
      <link>https://wklken.me/posts/2022/10/19/django-drf-performance.html</link>
      <pubDate>Wed, 19 Oct 2022 01:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2022/10/19/django-drf-performance.html</guid>
      <description>1. DB 查询分析 步骤: 通过日志/监控等, 统计top 10的接口(URL及请求参数) 通过 APM 等, 统计慢接口top 10, 以及得到慢查询 SQL 开发环境, 开启SQL</description>
    </item>
    
    <item>
      <title>DRF 的一些实践 Part1: Serializer</title>
      <link>https://wklken.me/posts/2022/10/09/django-drf-serializer.html</link>
      <pubDate>Sun, 09 Oct 2022 01:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2022/10/09/django-drf-serializer.html</guid>
      <description>SLZ 只做输入/输出相关的逻辑, 尽量避免处理具体的业务逻辑 命名建议 写全 xxSerializers 也可以用缩写xxSLZ(注意全大写, 不要用xxSlz) 两种风格 1. 全部se</description>
    </item>
    
    <item>
      <title>DRF继承关系图</title>
      <link>https://wklken.me/posts/2022/10/07/django-drf-inherit.html</link>
      <pubDate>Fri, 07 Oct 2022 22:00:00 +0800</pubDate>
      
      <guid>https://wklken.me/posts/2022/10/07/django-drf-inherit.html</guid>
      <description>最佳实践: 业务逻辑类, 尽量继承于右下角的这批基类, 以保持简单(所有开发有共同的框架背景认识) 尽量不要在业务逻辑类与 DRF 基类之间增加一层 公共基类</description>
    </item>
    
  </channel>
</rss>
